ROLE
You are running inside Cursor with terminal + filesystem access.
Ensure this laptop has all required MCP servers installed and healthy.

REQUIRED MCP SERVERS / TOOLS
- Context7 MCP → `context7-mcp`
- Playwright MCP (stdio) → `npx @playwright/mcp@latest`
- Playwright runtime (CLI + browsers) → `npx playwright install`
- Postgres MCP → `@modelcontextprotocol/server-postgres`
- SQLite MCP → `mcp-sqlite`
- OpenAPI MCP → `mcp-openapi-server`

STEPS

1) CHECK INSTALLS (print status)
- `command -v context7-mcp || echo "missing: context7-mcp"`
- `node -v && npm -v || echo "missing: node/npm"`
- `npx -y @playwright/mcp@latest --help || echo "missing: @playwright/mcp"`
- `npx -y playwright --version || echo "missing: playwright-cli"`
- `command -v @modelcontextprotocol/server-postgres || npx -y @modelcontextprotocol/server-postgres --help || echo "missing: postgres-mcp"`
- `command -v mcp-sqlite || echo "missing: mcp-sqlite"`
- `command -v mcp-openapi-server || echo "missing: mcp-openapi-server"`

2) INSTALL IF MISSING (idempotent; show commands you run)
- Postgres MCP:
  `npm install -g @modelcontextprotocol/server-postgres`
- SQLite MCP:
git clone https://github.com/jparkerweb/mcp-sqlite ~/.mcp/mcp-sqlite || true
cd ~/.mcp/mcp-sqlite && npm install && npm link

diff
Copy
Edit
- OpenAPI MCP:
git clone https://github.com/ivo-toby/mcp-openapi-server ~/.mcp/mcp-openapi-server || true
cd ~/.mcp/mcp-openapi-server && npm install && npm link

markdown
Copy
Edit
- Playwright runtime (CLI + browsers):
- macOS/Windows: `npx -y playwright install`
- Linux (headless deps): `npx -y playwright install --with-deps`

> Note: Playwright MCP runs via `npx @playwright/mcp@latest` and doesn’t require a daemon. No global install needed.

3) START / VERIFY SERVERS (read ports/URLs from `.env`; fall back to sensible defaults)
- If `Makefile` exists, prefer: `make mcp-up`
- Otherwise start manually (background):
- Context7: `context7-mcp --config $HOME/.context7/context7.toml --port ${CONTEXT7_PORT:-8765} --cwd $PWD &`
- Postgres MCP: `npx -y @modelcontextprotocol/server-postgres --url "$POSTGRES_URL" --mode http --port ${POSTGRES_PORT:-7771} &`
- SQLite MCP: `mcp-sqlite --db "${SQLITE_DB:-./dev.db}" --port ${SQLITE_PORT:-7772} &`
- OpenAPI MCP: `mcp-openapi-server --spec "${OPENAPI_SPEC}" --port ${OPENAPI_PORT:-7773} &`

4) HEALTH CHECK (stop and print FIX steps on failure)
- `@postgres query` → `SELECT 1;`
- `@sqlite query` → `SELECT 1;`
- `@openapi list_operations`
- `@playwright version`
- Trigger Context7 by asking for a small refactor so `.context/claude.md` is attached.

OUTPUT
- A checklist:
- Context7 MCP: Installed/Installed now/Missing
- Playwright MCP: Available via npx ✅
- Playwright browsers: Installed now/Already installed/Missing
- Postgres MCP: Installed/Installed now/Missing
- SQLite MCP: Installed/Installed now/Missing
- OpenAPI MCP: Installed/Installed now/Missing
- Health results for each tool.
- Final line:
- `All MCPs installed and healthy ✅`
- or `Setup incomplete — see FIX instructions ❌` (include exact commands/log hints)
